
state 0:

	program : . exp 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LPAREN	shift 15
	MINUS	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10
	BREAK	shift 9
	NIL	shift 8

	exp	goto 7
	program	goto 150
	lvalue	goto 6
	func_call	goto 5
	arithmetic	goto 4
	comparison	goto 3
	bool_exp	goto 2
	record	goto 1

	.	error


state 1:

	exp : record .  (reduce by rule 11)



	.	reduce by rule 11


state 2:

	exp : bool_exp .  (reduce by rule 10)



	.	reduce by rule 10


state 3:

	exp : comparison .  (reduce by rule 9)



	.	reduce by rule 9


state 4:

	exp : arithmetic .  (reduce by rule 8)



	.	reduce by rule 8


state 5:

	exp : func_call .  (reduce by rule 7)



	.	reduce by rule 7


state 6:

	exp : lvalue .  (reduce by rule 1)
	exp : lvalue . ASSIGN exp 

	ASSIGN	shift 19


	.	reduce by rule 1


state 7:

	program : exp .  (reduce by rule 0)
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20


	.	reduce by rule 0


state 8:

	exp : NIL .  (reduce by rule 2)



	.	reduce by rule 2


state 9:

	exp : BREAK .  (reduce by rule 18)



	.	reduce by rule 18


state 10:

	exp : LET . decseq IN maybe_expseq END 

	FUNCTION	shift 39
	VAR	shift 38
	TYPE	shift 37

	decseq	goto 36
	dec	goto 35
	tydec	goto 34
	vardec	goto 33
	fundec	goto 32

	.	reduce by rule 50


state 11:

	exp : FOR . ID ASSIGN exp TO exp DO exp 

	ID	shift 40


	.	error


state 12:

	exp : WHILE . exp DO exp 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LPAREN	shift 15
	MINUS	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10
	BREAK	shift 9
	NIL	shift 8

	exp	goto 41
	lvalue	goto 6
	func_call	goto 5
	arithmetic	goto 4
	comparison	goto 3
	bool_exp	goto 2
	record	goto 1

	.	error


state 13:

	exp : IF . exp THEN exp ELSE exp 
	exp : IF . exp THEN exp 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LPAREN	shift 15
	MINUS	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10
	BREAK	shift 9
	NIL	shift 8

	exp	goto 42
	lvalue	goto 6
	func_call	goto 5
	arithmetic	goto 4
	comparison	goto 3
	bool_exp	goto 2
	record	goto 1

	.	error


state 14:

	exp : MINUS . exp 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LPAREN	shift 15
	MINUS	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10
	BREAK	shift 9
	NIL	shift 8

	exp	goto 43
	lvalue	goto 6
	func_call	goto 5
	arithmetic	goto 4
	comparison	goto 3
	bool_exp	goto 2
	record	goto 1

	.	error


state 15:

	exp : LPAREN . in_parens RPAREN 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LPAREN	shift 15
	MINUS	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10
	BREAK	shift 9
	NIL	shift 8

	exp	goto 46
	lvalue	goto 6
	explist	goto 45
	func_call	goto 5
	arithmetic	goto 4
	comparison	goto 3
	bool_exp	goto 2
	record	goto 1
	in_parens	goto 44

	.	reduce by rule 20


state 16:

	exp : STRING .  (reduce by rule 5)



	.	reduce by rule 5


state 17:

	exp : INT .  (reduce by rule 4)



	.	reduce by rule 4


state 18:

	exp : ID . LBRACK exp RBRACK OF exp 
	lvalue : ID . lvalue_tail 
	func_call : ID . LPAREN RPAREN 
	func_call : ID . LPAREN func_args RPAREN 
	record : ID . LBRACE RBRACE 
	record : ID . LBRACE rec_entries RBRACE 

	LPAREN	shift 51
	LBRACK	shift 50
	LBRACE	shift 49
	DOT	shift 48

	lvalue_tail	goto 47

	.	reduce by rule 26


state 19:

	exp : lvalue ASSIGN . exp 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LPAREN	shift 15
	MINUS	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10
	BREAK	shift 9
	NIL	shift 8

	exp	goto 52
	lvalue	goto 6
	func_call	goto 5
	arithmetic	goto 4
	comparison	goto 3
	bool_exp	goto 2
	record	goto 1

	.	error


state 20:

	bool_exp : exp OR . exp 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LPAREN	shift 15
	MINUS	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10
	BREAK	shift 9
	NIL	shift 8

	exp	goto 53
	lvalue	goto 6
	func_call	goto 5
	arithmetic	goto 4
	comparison	goto 3
	bool_exp	goto 2
	record	goto 1

	.	error


state 21:

	bool_exp : exp AND . exp 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LPAREN	shift 15
	MINUS	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10
	BREAK	shift 9
	NIL	shift 8

	exp	goto 54
	lvalue	goto 6
	func_call	goto 5
	arithmetic	goto 4
	comparison	goto 3
	bool_exp	goto 2
	record	goto 1

	.	error


state 22:

	comparison : exp GE . exp 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LPAREN	shift 15
	MINUS	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10
	BREAK	shift 9
	NIL	shift 8

	exp	goto 55
	lvalue	goto 6
	func_call	goto 5
	arithmetic	goto 4
	comparison	goto 3
	bool_exp	goto 2
	record	goto 1

	.	error


state 23:

	comparison : exp GT . exp 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LPAREN	shift 15
	MINUS	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10
	BREAK	shift 9
	NIL	shift 8

	exp	goto 56
	lvalue	goto 6
	func_call	goto 5
	arithmetic	goto 4
	comparison	goto 3
	bool_exp	goto 2
	record	goto 1

	.	error


state 24:

	comparison : exp LE . exp 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LPAREN	shift 15
	MINUS	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10
	BREAK	shift 9
	NIL	shift 8

	exp	goto 57
	lvalue	goto 6
	func_call	goto 5
	arithmetic	goto 4
	comparison	goto 3
	bool_exp	goto 2
	record	goto 1

	.	error


state 25:

	comparison : exp LT . exp 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LPAREN	shift 15
	MINUS	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10
	BREAK	shift 9
	NIL	shift 8

	exp	goto 58
	lvalue	goto 6
	func_call	goto 5
	arithmetic	goto 4
	comparison	goto 3
	bool_exp	goto 2
	record	goto 1

	.	error


state 26:

	comparison : exp NEQ . exp 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LPAREN	shift 15
	MINUS	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10
	BREAK	shift 9
	NIL	shift 8

	exp	goto 59
	lvalue	goto 6
	func_call	goto 5
	arithmetic	goto 4
	comparison	goto 3
	bool_exp	goto 2
	record	goto 1

	.	error


state 27:

	comparison : exp EQ . exp 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LPAREN	shift 15
	MINUS	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10
	BREAK	shift 9
	NIL	shift 8

	exp	goto 60
	lvalue	goto 6
	func_call	goto 5
	arithmetic	goto 4
	comparison	goto 3
	bool_exp	goto 2
	record	goto 1

	.	error


state 28:

	arithmetic : exp DIVIDE . exp 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LPAREN	shift 15
	MINUS	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10
	BREAK	shift 9
	NIL	shift 8

	exp	goto 61
	lvalue	goto 6
	func_call	goto 5
	arithmetic	goto 4
	comparison	goto 3
	bool_exp	goto 2
	record	goto 1

	.	error


state 29:

	arithmetic : exp TIMES . exp 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LPAREN	shift 15
	MINUS	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10
	BREAK	shift 9
	NIL	shift 8

	exp	goto 62
	lvalue	goto 6
	func_call	goto 5
	arithmetic	goto 4
	comparison	goto 3
	bool_exp	goto 2
	record	goto 1

	.	error


state 30:

	arithmetic : exp MINUS . exp 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LPAREN	shift 15
	MINUS	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10
	BREAK	shift 9
	NIL	shift 8

	exp	goto 63
	lvalue	goto 6
	func_call	goto 5
	arithmetic	goto 4
	comparison	goto 3
	bool_exp	goto 2
	record	goto 1

	.	error


state 31:

	arithmetic : exp PLUS . exp 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LPAREN	shift 15
	MINUS	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10
	BREAK	shift 9
	NIL	shift 8

	exp	goto 64
	lvalue	goto 6
	func_call	goto 5
	arithmetic	goto 4
	comparison	goto 3
	bool_exp	goto 2
	record	goto 1

	.	error


state 32:

	dec : fundec .  (reduce by rule 54)



	.	reduce by rule 54


state 33:

	dec : vardec .  (reduce by rule 53)



	.	reduce by rule 53


state 34:

	dec : tydec .  (reduce by rule 52)



	.	reduce by rule 52


state 35:

	decseq : dec . decseq 

	FUNCTION	shift 39
	VAR	shift 38
	TYPE	shift 37

	decseq	goto 65
	dec	goto 35
	tydec	goto 34
	vardec	goto 33
	fundec	goto 32

	.	reduce by rule 50


state 36:

	exp : LET decseq . IN maybe_expseq END 

	IN	shift 66


	.	error


state 37:

	tydec : TYPE . ID EQ ty 

	ID	shift 67


	.	error


state 38:

	vardec : VAR . ID ASSIGN exp 
	vardec : VAR . ID COLON ID ASSIGN exp 

	ID	shift 68


	.	error


state 39:

	fundec : FUNCTION . ID LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp 

	ID	shift 69


	.	error


state 40:

	exp : FOR ID . ASSIGN exp TO exp DO exp 

	ASSIGN	shift 70


	.	error


state 41:

	exp : WHILE exp . DO exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20
	DO	shift 71


	.	error


state 42:

	exp : IF exp . THEN exp ELSE exp 
	exp : IF exp . THEN exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20
	THEN	shift 72


	.	error


state 43:

	exp : MINUS exp .  (reduce by rule 6)
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 



	.	reduce by rule 6


state 44:

	exp : LPAREN in_parens . RPAREN 

	RPAREN	shift 73


	.	error


state 45:

	in_parens : explist .  (reduce by rule 22)



	.	reduce by rule 22


state 46:

	explist : exp . explist_tail 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 
	in_parens : exp .  (reduce by rule 21)

	SEMICOLON	shift 75
	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20

	explist_tail	goto 74

	.	reduce by rule 21


state 47:

	lvalue : ID lvalue_tail .  (reduce by rule 23)



	.	reduce by rule 23


state 48:

	lvalue_tail : DOT . ID lvalue_tail 

	ID	shift 76


	.	error


state 49:

	record : ID LBRACE . RBRACE 
	record : ID LBRACE . rec_entries RBRACE 

	ID	shift 79
	RBRACE	shift 78

	rec_entries	goto 77

	.	error


state 50:

	exp : ID LBRACK . exp RBRACK OF exp 
	lvalue_tail : LBRACK . exp RBRACK lvalue_tail 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LPAREN	shift 15
	MINUS	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10
	BREAK	shift 9
	NIL	shift 8

	exp	goto 80
	lvalue	goto 6
	func_call	goto 5
	arithmetic	goto 4
	comparison	goto 3
	bool_exp	goto 2
	record	goto 1

	.	error


state 51:

	func_call : ID LPAREN . RPAREN 
	func_call : ID LPAREN . func_args RPAREN 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LPAREN	shift 15
	RPAREN	shift 83
	MINUS	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10
	BREAK	shift 9
	NIL	shift 8

	exp	goto 82
	lvalue	goto 6
	func_call	goto 5
	func_args	goto 81
	arithmetic	goto 4
	comparison	goto 3
	bool_exp	goto 2
	record	goto 1

	.	error


state 52:

	exp : lvalue ASSIGN exp .  (reduce by rule 13)
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20


	.	reduce by rule 13


state 53:

	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 
	bool_exp : exp OR exp .  (reduce by rule 45)

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21


	.	reduce by rule 45


state 54:

	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp AND exp .  (reduce by rule 44)
	bool_exp : exp . OR exp 

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22


	.	reduce by rule 44


state 55:

	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	comparison : exp GE exp .  (reduce by rule 43)
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	EOF	reduce by rule 43
	COMMA	reduce by rule 43
	SEMICOLON	reduce by rule 43
	RPAREN	reduce by rule 43
	RBRACK	reduce by rule 43
	RBRACE	reduce by rule 43
	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	AND	reduce by rule 43
	OR	reduce by rule 43
	THEN	reduce by rule 43
	ELSE	reduce by rule 43
	TO	reduce by rule 43
	DO	reduce by rule 43
	IN	reduce by rule 43
	END	reduce by rule 43
	FUNCTION	reduce by rule 43
	VAR	reduce by rule 43
	TYPE	reduce by rule 43


	.	error


state 56:

	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp GT exp .  (reduce by rule 42)
	comparison : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	EOF	reduce by rule 42
	COMMA	reduce by rule 42
	SEMICOLON	reduce by rule 42
	RPAREN	reduce by rule 42
	RBRACK	reduce by rule 42
	RBRACE	reduce by rule 42
	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	AND	reduce by rule 42
	OR	reduce by rule 42
	THEN	reduce by rule 42
	ELSE	reduce by rule 42
	TO	reduce by rule 42
	DO	reduce by rule 42
	IN	reduce by rule 42
	END	reduce by rule 42
	FUNCTION	reduce by rule 42
	VAR	reduce by rule 42
	TYPE	reduce by rule 42


	.	error


state 57:

	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp LE exp .  (reduce by rule 41)
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	EOF	reduce by rule 41
	COMMA	reduce by rule 41
	SEMICOLON	reduce by rule 41
	RPAREN	reduce by rule 41
	RBRACK	reduce by rule 41
	RBRACE	reduce by rule 41
	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	AND	reduce by rule 41
	OR	reduce by rule 41
	THEN	reduce by rule 41
	ELSE	reduce by rule 41
	TO	reduce by rule 41
	DO	reduce by rule 41
	IN	reduce by rule 41
	END	reduce by rule 41
	FUNCTION	reduce by rule 41
	VAR	reduce by rule 41
	TYPE	reduce by rule 41


	.	error


state 58:

	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp LT exp .  (reduce by rule 40)
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	EOF	reduce by rule 40
	COMMA	reduce by rule 40
	SEMICOLON	reduce by rule 40
	RPAREN	reduce by rule 40
	RBRACK	reduce by rule 40
	RBRACE	reduce by rule 40
	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	AND	reduce by rule 40
	OR	reduce by rule 40
	THEN	reduce by rule 40
	ELSE	reduce by rule 40
	TO	reduce by rule 40
	DO	reduce by rule 40
	IN	reduce by rule 40
	END	reduce by rule 40
	FUNCTION	reduce by rule 40
	VAR	reduce by rule 40
	TYPE	reduce by rule 40


	.	error


state 59:

	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp NEQ exp .  (reduce by rule 39)
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	EOF	reduce by rule 39
	COMMA	reduce by rule 39
	SEMICOLON	reduce by rule 39
	RPAREN	reduce by rule 39
	RBRACK	reduce by rule 39
	RBRACE	reduce by rule 39
	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	AND	reduce by rule 39
	OR	reduce by rule 39
	THEN	reduce by rule 39
	ELSE	reduce by rule 39
	TO	reduce by rule 39
	DO	reduce by rule 39
	IN	reduce by rule 39
	END	reduce by rule 39
	FUNCTION	reduce by rule 39
	VAR	reduce by rule 39
	TYPE	reduce by rule 39


	.	error


state 60:

	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	comparison : exp . EQ exp 
	comparison : exp EQ exp .  (reduce by rule 38)
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	EOF	reduce by rule 38
	COMMA	reduce by rule 38
	SEMICOLON	reduce by rule 38
	RPAREN	reduce by rule 38
	RBRACK	reduce by rule 38
	RBRACE	reduce by rule 38
	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	AND	reduce by rule 38
	OR	reduce by rule 38
	THEN	reduce by rule 38
	ELSE	reduce by rule 38
	TO	reduce by rule 38
	DO	reduce by rule 38
	IN	reduce by rule 38
	END	reduce by rule 38
	FUNCTION	reduce by rule 38
	VAR	reduce by rule 38
	TYPE	reduce by rule 38


	.	error


state 61:

	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	arithmetic : exp DIVIDE exp .  (reduce by rule 37)
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 



	.	reduce by rule 37


state 62:

	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp TIMES exp .  (reduce by rule 36)
	arithmetic : exp . DIVIDE exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 



	.	reduce by rule 36


state 63:

	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp MINUS exp .  (reduce by rule 35)
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	TIMES	shift 29
	DIVIDE	shift 28


	.	reduce by rule 35


state 64:

	arithmetic : exp . PLUS exp 
	arithmetic : exp PLUS exp .  (reduce by rule 34)
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	TIMES	shift 29
	DIVIDE	shift 28


	.	reduce by rule 34


state 65:

	decseq : dec decseq .  (reduce by rule 51)



	.	reduce by rule 51


state 66:

	exp : LET decseq IN . maybe_expseq END 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LPAREN	shift 15
	MINUS	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10
	BREAK	shift 9
	NIL	shift 8

	exp	goto 86
	lvalue	goto 6
	func_call	goto 5
	arithmetic	goto 4
	comparison	goto 3
	bool_exp	goto 2
	record	goto 1
	expseq	goto 85
	maybe_expseq	goto 84

	.	reduce by rule 67


state 67:

	tydec : TYPE ID . EQ ty 

	EQ	shift 87


	.	error


state 68:

	vardec : VAR ID . ASSIGN exp 
	vardec : VAR ID . COLON ID ASSIGN exp 

	COLON	shift 89
	ASSIGN	shift 88


	.	error


state 69:

	fundec : FUNCTION ID . LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp 

	LPAREN	shift 90


	.	error


state 70:

	exp : FOR ID ASSIGN . exp TO exp DO exp 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LPAREN	shift 15
	MINUS	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10
	BREAK	shift 9
	NIL	shift 8

	exp	goto 91
	lvalue	goto 6
	func_call	goto 5
	arithmetic	goto 4
	comparison	goto 3
	bool_exp	goto 2
	record	goto 1

	.	error


state 71:

	exp : WHILE exp DO . exp 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LPAREN	shift 15
	MINUS	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10
	BREAK	shift 9
	NIL	shift 8

	exp	goto 92
	lvalue	goto 6
	func_call	goto 5
	arithmetic	goto 4
	comparison	goto 3
	bool_exp	goto 2
	record	goto 1

	.	error


state 72:

	exp : IF exp THEN . exp ELSE exp 
	exp : IF exp THEN . exp 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LPAREN	shift 15
	MINUS	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10
	BREAK	shift 9
	NIL	shift 8

	exp	goto 93
	lvalue	goto 6
	func_call	goto 5
	arithmetic	goto 4
	comparison	goto 3
	bool_exp	goto 2
	record	goto 1

	.	error


state 73:

	exp : LPAREN in_parens RPAREN .  (reduce by rule 3)



	.	reduce by rule 3


state 74:

	explist : exp explist_tail .  (reduce by rule 27)



	.	reduce by rule 27


state 75:

	explist_tail : SEMICOLON . explist 
	explist_tail : SEMICOLON . exp 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LPAREN	shift 15
	MINUS	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10
	BREAK	shift 9
	NIL	shift 8

	exp	goto 95
	lvalue	goto 6
	explist	goto 94
	func_call	goto 5
	arithmetic	goto 4
	comparison	goto 3
	bool_exp	goto 2
	record	goto 1

	.	error


state 76:

	lvalue_tail : DOT ID . lvalue_tail 

	LBRACK	shift 97
	DOT	shift 48

	lvalue_tail	goto 96

	.	reduce by rule 26


state 77:

	record : ID LBRACE rec_entries . RBRACE 

	RBRACE	shift 98


	.	error


state 78:

	record : ID LBRACE RBRACE .  (reduce by rule 46)



	.	reduce by rule 46


state 79:

	rec_entries : ID . EQ exp 
	rec_entries : ID . EQ exp COMMA rec_entries 

	EQ	shift 99


	.	error


state 80:

	exp : ID LBRACK exp . RBRACK OF exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 
	lvalue_tail : LBRACK exp . RBRACK lvalue_tail 

	RBRACK	shift 100
	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20


	.	error


state 81:

	func_call : ID LPAREN func_args . RPAREN 

	RPAREN	shift 101


	.	error


state 82:

	func_args : exp .  (reduce by rule 32)
	func_args : exp . COMMA func_args 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	COMMA	shift 102
	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20


	.	reduce by rule 32


state 83:

	func_call : ID LPAREN RPAREN .  (reduce by rule 30)



	.	reduce by rule 30


state 84:

	exp : LET decseq IN maybe_expseq . END 

	END	shift 103


	.	error


state 85:

	maybe_expseq : expseq .  (reduce by rule 68)



	.	reduce by rule 68


state 86:

	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 
	expseq : exp .  (reduce by rule 69)
	expseq : exp . SEMICOLON expseq 

	SEMICOLON	shift 104
	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20


	.	reduce by rule 69


state 87:

	tydec : TYPE ID EQ . ty 

	ID	shift 108
	LBRACE	shift 107
	ARRAY	shift 106

	ty	goto 105

	.	error


state 88:

	vardec : VAR ID ASSIGN . exp 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LPAREN	shift 15
	MINUS	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10
	BREAK	shift 9
	NIL	shift 8

	exp	goto 109
	lvalue	goto 6
	func_call	goto 5
	arithmetic	goto 4
	comparison	goto 3
	bool_exp	goto 2
	record	goto 1

	.	error


state 89:

	vardec : VAR ID COLON . ID ASSIGN exp 

	ID	shift 110


	.	error


state 90:

	fundec : FUNCTION ID LPAREN . tyfields RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp 

	ID	shift 112

	tyfields	goto 111

	.	reduce by rule 59


state 91:

	exp : FOR ID ASSIGN exp . TO exp DO exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20
	TO	shift 113


	.	error


state 92:

	exp : WHILE exp DO exp .  (reduce by rule 16)
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20


	.	reduce by rule 16


state 93:

	exp : IF exp THEN exp . ELSE exp 
	exp : IF exp THEN exp .  (reduce by rule 15)
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20
	ELSE	shift 114


	.	reduce by rule 15


state 94:

	explist_tail : SEMICOLON explist .  (reduce by rule 28)



	.	reduce by rule 28


state 95:

	explist : exp . explist_tail 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 
	explist_tail : SEMICOLON exp .  (reduce by rule 29)

	SEMICOLON	shift 75
	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20

	explist_tail	goto 74

	.	reduce by rule 29


state 96:

	lvalue_tail : DOT ID lvalue_tail .  (reduce by rule 24)



	.	reduce by rule 24


state 97:

	lvalue_tail : LBRACK . exp RBRACK lvalue_tail 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LPAREN	shift 15
	MINUS	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10
	BREAK	shift 9
	NIL	shift 8

	exp	goto 115
	lvalue	goto 6
	func_call	goto 5
	arithmetic	goto 4
	comparison	goto 3
	bool_exp	goto 2
	record	goto 1

	.	error


state 98:

	record : ID LBRACE rec_entries RBRACE .  (reduce by rule 47)



	.	reduce by rule 47


state 99:

	rec_entries : ID EQ . exp 
	rec_entries : ID EQ . exp COMMA rec_entries 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LPAREN	shift 15
	MINUS	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10
	BREAK	shift 9
	NIL	shift 8

	exp	goto 116
	lvalue	goto 6
	func_call	goto 5
	arithmetic	goto 4
	comparison	goto 3
	bool_exp	goto 2
	record	goto 1

	.	error


state 100:

	exp : ID LBRACK exp RBRACK . OF exp 
	lvalue_tail : LBRACK exp RBRACK . lvalue_tail 

	LBRACK	shift 97
	DOT	shift 48
	OF	shift 118

	lvalue_tail	goto 117

	.	reduce by rule 26


state 101:

	func_call : ID LPAREN func_args RPAREN .  (reduce by rule 31)



	.	reduce by rule 31


state 102:

	func_args : exp COMMA . func_args 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LPAREN	shift 15
	MINUS	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10
	BREAK	shift 9
	NIL	shift 8

	exp	goto 82
	lvalue	goto 6
	func_call	goto 5
	func_args	goto 119
	arithmetic	goto 4
	comparison	goto 3
	bool_exp	goto 2
	record	goto 1

	.	error


state 103:

	exp : LET decseq IN maybe_expseq END .  (reduce by rule 19)



	.	reduce by rule 19


state 104:

	expseq : exp SEMICOLON . expseq 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LPAREN	shift 15
	MINUS	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10
	BREAK	shift 9
	NIL	shift 8

	exp	goto 86
	lvalue	goto 6
	func_call	goto 5
	arithmetic	goto 4
	comparison	goto 3
	bool_exp	goto 2
	record	goto 1
	expseq	goto 120

	.	error


state 105:

	tydec : TYPE ID EQ ty .  (reduce by rule 55)



	.	reduce by rule 55


state 106:

	ty : ARRAY . OF ID 

	OF	shift 121


	.	error


state 107:

	ty : LBRACE . tyfields RBRACE 

	ID	shift 112

	tyfields	goto 122

	.	reduce by rule 59


state 108:

	ty : ID .  (reduce by rule 56)



	.	reduce by rule 56


state 109:

	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 
	vardec : VAR ID ASSIGN exp .  (reduce by rule 63)

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20


	.	reduce by rule 63


state 110:

	vardec : VAR ID COLON ID . ASSIGN exp 

	ASSIGN	shift 123


	.	error


state 111:

	fundec : FUNCTION ID LPAREN tyfields . RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp 

	RPAREN	shift 124


	.	error


state 112:

	tyfields : ID . COLON ID tyfields_tail 

	COLON	shift 125


	.	error


state 113:

	exp : FOR ID ASSIGN exp TO . exp DO exp 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LPAREN	shift 15
	MINUS	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10
	BREAK	shift 9
	NIL	shift 8

	exp	goto 126
	lvalue	goto 6
	func_call	goto 5
	arithmetic	goto 4
	comparison	goto 3
	bool_exp	goto 2
	record	goto 1

	.	error


state 114:

	exp : IF exp THEN exp ELSE . exp 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LPAREN	shift 15
	MINUS	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10
	BREAK	shift 9
	NIL	shift 8

	exp	goto 127
	lvalue	goto 6
	func_call	goto 5
	arithmetic	goto 4
	comparison	goto 3
	bool_exp	goto 2
	record	goto 1

	.	error


state 115:

	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 
	lvalue_tail : LBRACK exp . RBRACK lvalue_tail 

	RBRACK	shift 128
	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20


	.	error


state 116:

	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 
	rec_entries : ID EQ exp .  (reduce by rule 48)
	rec_entries : ID EQ exp . COMMA rec_entries 

	COMMA	shift 129
	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20


	.	reduce by rule 48


state 117:

	lvalue_tail : LBRACK exp RBRACK lvalue_tail .  (reduce by rule 25)



	.	reduce by rule 25


state 118:

	exp : ID LBRACK exp RBRACK OF . exp 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LPAREN	shift 15
	MINUS	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10
	BREAK	shift 9
	NIL	shift 8

	exp	goto 130
	lvalue	goto 6
	func_call	goto 5
	arithmetic	goto 4
	comparison	goto 3
	bool_exp	goto 2
	record	goto 1

	.	error


state 119:

	func_args : exp COMMA func_args .  (reduce by rule 33)



	.	reduce by rule 33


state 120:

	expseq : exp SEMICOLON expseq .  (reduce by rule 70)



	.	reduce by rule 70


state 121:

	ty : ARRAY OF . ID 

	ID	shift 131


	.	error


state 122:

	ty : LBRACE tyfields . RBRACE 

	RBRACE	shift 132


	.	error


state 123:

	vardec : VAR ID COLON ID ASSIGN . exp 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LPAREN	shift 15
	MINUS	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10
	BREAK	shift 9
	NIL	shift 8

	exp	goto 133
	lvalue	goto 6
	func_call	goto 5
	arithmetic	goto 4
	comparison	goto 3
	bool_exp	goto 2
	record	goto 1

	.	error


state 124:

	fundec : FUNCTION ID LPAREN tyfields RPAREN . EQ exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp 

	COLON	shift 135
	EQ	shift 134


	.	error


state 125:

	tyfields : ID COLON . ID tyfields_tail 

	ID	shift 136


	.	error


state 126:

	exp : FOR ID ASSIGN exp TO exp . DO exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20
	DO	shift 137


	.	error


state 127:

	exp : IF exp THEN exp ELSE exp .  (reduce by rule 14)
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20


	.	reduce by rule 14


state 128:

	lvalue_tail : LBRACK exp RBRACK . lvalue_tail 

	LBRACK	shift 97
	DOT	shift 48

	lvalue_tail	goto 117

	.	reduce by rule 26


state 129:

	rec_entries : ID EQ exp COMMA . rec_entries 

	ID	shift 79

	rec_entries	goto 138

	.	error


state 130:

	exp : ID LBRACK exp RBRACK OF exp .  (reduce by rule 12)
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20


	.	reduce by rule 12


state 131:

	ty : ARRAY OF ID .  (reduce by rule 58)



	.	reduce by rule 58


state 132:

	ty : LBRACE tyfields RBRACE .  (reduce by rule 57)



	.	reduce by rule 57


state 133:

	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 
	vardec : VAR ID COLON ID ASSIGN exp .  (reduce by rule 64)

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20


	.	reduce by rule 64


state 134:

	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ . exp 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LPAREN	shift 15
	MINUS	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10
	BREAK	shift 9
	NIL	shift 8

	exp	goto 139
	lvalue	goto 6
	func_call	goto 5
	arithmetic	goto 4
	comparison	goto 3
	bool_exp	goto 2
	record	goto 1

	.	error


state 135:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp 

	ID	shift 140


	.	error


state 136:

	tyfields : ID COLON ID . tyfields_tail 

	COMMA	shift 142

	tyfields_tail	goto 141

	.	reduce by rule 62


state 137:

	exp : FOR ID ASSIGN exp TO exp DO . exp 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LPAREN	shift 15
	MINUS	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10
	BREAK	shift 9
	NIL	shift 8

	exp	goto 143
	lvalue	goto 6
	func_call	goto 5
	arithmetic	goto 4
	comparison	goto 3
	bool_exp	goto 2
	record	goto 1

	.	error


state 138:

	rec_entries : ID EQ exp COMMA rec_entries .  (reduce by rule 49)



	.	reduce by rule 49


state 139:

	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ exp .  (reduce by rule 65)

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20


	.	reduce by rule 65


state 140:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp 

	EQ	shift 144


	.	error


state 141:

	tyfields : ID COLON ID tyfields_tail .  (reduce by rule 60)



	.	reduce by rule 60


state 142:

	tyfields_tail : COMMA . ID COLON ID tyfields_tail 

	ID	shift 145


	.	error


state 143:

	exp : FOR ID ASSIGN exp TO exp DO exp .  (reduce by rule 17)
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20


	.	reduce by rule 17


state 144:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LPAREN	shift 15
	MINUS	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10
	BREAK	shift 9
	NIL	shift 8

	exp	goto 146
	lvalue	goto 6
	func_call	goto 5
	arithmetic	goto 4
	comparison	goto 3
	bool_exp	goto 2
	record	goto 1

	.	error


state 145:

	tyfields_tail : COMMA ID . COLON ID tyfields_tail 

	COLON	shift 147


	.	error


state 146:

	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . LT exp 
	comparison : exp . LE exp 
	comparison : exp . GT exp 
	comparison : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .  (reduce by rule 66)

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20


	.	reduce by rule 66


state 147:

	tyfields_tail : COMMA ID COLON . ID tyfields_tail 

	ID	shift 148


	.	error


state 148:

	tyfields_tail : COMMA ID COLON ID . tyfields_tail 

	COMMA	shift 142

	tyfields_tail	goto 149

	.	reduce by rule 62


state 149:

	tyfields_tail : COMMA ID COLON ID tyfields_tail .  (reduce by rule 61)



	.	reduce by rule 61


state 150:


	EOF	accept


	.	error

525 of 1046 action table entries left after compaction
291 goto table entries
