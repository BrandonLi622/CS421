Standard ML of New Jersey v110.74 [built: Sat Sep 29 18:19:30 2012]
- [autoloading]
[library $smlnj/cm/cm.cm is stable]
[library $smlnj/internal/cm-sig-lib.cm is stable]
[library $/pgraph.cm is stable]
[library $smlnj/internal/srcpath-lib.cm is stable]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
[scanning sources.cm]
[attempting to load plugin $/lex-ext.cm]
[library $/lex-ext.cm is stable]
[library $smlnj/cm/tools.cm is stable]
[library $smlnj/internal/cm-lib.cm is stable]
[plugin $/lex-ext.cm loaded successfully]
[attempting to load plugin $/mllex-tool.cm]
[library $/mllex-tool.cm is stable]
[plugin $/mllex-tool.cm loaded successfully]
[loading (sources.cm):errormsg.sml]
[loading (sources.cm):tokens.sig]
[loading (sources.cm):tokens.sml]
[loading (sources.cm):tiger.lex.sml]
[loading (sources.cm):driver.sml]
[New bindings added.]
val it = true : bool
- LET   44
TYPE   49
ID(arrtype)     55
EQ   63
ARRAY   65
OF   71
ID(int)     74
VAR   79
ID(arr1)     83
COLON   87
ID(arrtype)     88
ASSIGN   96
ID(arrtype)     99
LBRACK   107
INT(10)   108
RBRACK   110
OF   112
INT(0)   115
IN   117
ID(arr1)     121
END   126
EOF   129
val it = () : unit
- LET   56
TYPE   61
ID(myint)     66
EQ   72
ID(int)     74
TYPE   79
ID(arrtype)     85
EQ   93
ARRAY   95
OF   101
ID(myint)     104
VAR   112
ID(arr1)     116
COLON   120
ID(arrtype)     121
ASSIGN   129
ID(arrtype)     132
LBRACK   140
INT(10)   141
RBRACK   143
OF   145
INT(0)   148
IN   150
ID(arr1)     154
END   159
EOF   162
val it = () : unit
- LET   44
TYPE   49
ID(rectype)     55
EQ   63
LBRACE   65
ID(name)     66
COLON   70
ID(string)     71
COMMA   77
ID(age)     79
COLON   82
ID(int)     83
RBRACE   86
VAR   89
ID(rec1)     93
COLON   97
ID(rectype)     98
ASSIGN   106
ID(rectype)     109
LBRACE   117
ID(name)     118
EQ   122
STRING(Nobody)     123
COMMA   131
ID(age)     133
EQ   136
INT(1000)   137
RBRACE   141
IN   143
ID(rec1)     147
DOT   151
ID(name)     152
ASSIGN   157
STRING(Somebody)     160
SEMICOLON   170
ID(rec1)     173
END   178
EOF   181
val it = () : unit
- LET   36
FUNCTION   60
ID(nfactor)     69
LPAREN   76
ID(n)     77
COLON   78
ID(int)     80
RPAREN   83
COLON   84
ID(int)     86
EQ   90
IF   94
ID(n)     98
EQ   100
INT(0)   102
THEN   108
INT(1)   113
ELSE   118
ID(n)     123
TIMES   125
ID(nfactor)     127
LPAREN   134
ID(n)     135
MINUS   136
INT(1)   137
RPAREN   138
IN   141
ID(nfactor)     145
LPAREN   152
INT(10)   153
RPAREN   155
END   157
EOF   161
val it = () : unit
- LET   37
TYPE   61
ID(intlist)     66
EQ   74
LBRACE   76
ID(hd)     77
COLON   79
ID(int)     81
COMMA   84
ID(tl)     86
COLON   88
ID(intlist)     90
RBRACE   97
TYPE   121
ID(tree)     126
EQ   131
LBRACE   132
ID(key)     133
COLON   136
ID(int)     138
COMMA   141
ID(children)     143
COLON   151
ID(treelist)     153
RBRACE   161
TYPE   163
ID(treelist)     168
EQ   177
LBRACE   179
ID(hd)     180
COLON   182
ID(tree)     184
COMMA   188
ID(tl)     190
COLON   192
ID(treelist)     194
RBRACE   202
VAR   205
ID(lis)     209
COLON   212
ID(intlist)     213
ASSIGN   221
ID(intlist)     224
LBRACE   232
ID(hd)     234
EQ   236
INT(0)   237
COMMA   238
ID(tl)     240
EQ   242
NIL   244
RBRACE   248
IN   252
ID(lis)     256
END   260
EOF   263
val it = () : unit
- ID(l)     2
ID(et)     4
LET   8
IN   13
IF   19
MINUS   22
INT(1)   23
NEQ   25
INT(0)   28
THEN   30
INT(1)   35
PLUS   36
INT(2)   37
TIMES   38
INT(3)   39
ELSE   41
INT(4)   46
DIVIDE   47
INT(5)   48
MINUS   49
INT(6)   50
END   97
EOF   100
val it = () : unit
- tests/testb.tig:1.1:illegal char 33 INIT_STATE
tests/testb.tig:1.2:illegal char 33 INIT_STATE
EOF   27
val it = () : unit
- tests/testc.tig:1.21:illegal char 10 STR_STATE
tests/testc.tig:1.21:unclosed string
EOF   22
val it = () : unit
- INT(5)   104
EOF   105
val it = () : unit
- LET   2
VAR   9
ID(s1)     13
ASSIGN   16
STRING(string)     19
VAR   30
ID(s7)     34
ASSIGN   37
STRING(/*)     40
IN   45
END   48
EOF   51
val it = () : unit
- VAR   2
ID(s4)     6
ASSIGN   9
STRING(well)     12
VAR   31
ID(s5)     35
ASSIGN   38
STRING(\t\t\t)     41
VAR   51
ID(s6)     55
ASSIGN   58
STRING()     61
EOF   72
val it = () : unit
- VAR   2
ID(s2)     6
ASSIGN   9
STRING(a long, long, long string)     12
VAR   66
ID(s3)     70
ASSIGN   73
STRING(hopefully short " \n)     76
EOF   99
val it = () : unit
- LET   44
TYPE   49
ID(arrtype)     55
EQ   63
ARRAY   65
OF   71
ID(int)     74
VAR   79
ID(arr1)     83
COLON   87
ID(arrtype)     88
ASSIGN   96
ID(arrtype)     99
LBRACK   107
INT(10)   108
RBRACK   110
OF   112
INT(0)   115
IN   117
ID(arr1)     121
END   126
EOF   129
val it = () : unit
- LET   49
VAR   57
ID(N)     61
ASSIGN   63
INT(8)   66
TYPE   73
ID(intArray)     78
EQ   87
ARRAY   89
OF   95
ID(int)     98
VAR   107
ID(row)     111
ASSIGN   115
ID(intArray)     118
LBRACK   127
ID(N)     129
RBRACK   131
OF   133
INT(0)   136
VAR   142
ID(col)     146
ASSIGN   150
ID(intArray)     153
LBRACK   162
ID(N)     164
RBRACK   166
OF   168
INT(0)   171
VAR   177
ID(diag1)     181
ASSIGN   187
ID(intArray)     190
LBRACK   199
ID(N)     200
PLUS   201
ID(N)     202
MINUS   203
INT(1)   204
RBRACK   205
OF   207
INT(0)   210
VAR   216
ID(diag2)     220
ASSIGN   226
ID(intArray)     229
LBRACK   238
ID(N)     239
PLUS   240
ID(N)     241
MINUS   242
INT(1)   243
RBRACK   244
OF   246
INT(0)   249
FUNCTION   256
ID(printboard)     265
LPAREN   275
RPAREN   276
EQ   278
LPAREN   287
FOR   288
ID(i)     292
ASSIGN   294
INT(0)   297
TO   299
ID(N)     302
MINUS   303
INT(1)   304
WHILE   308
LPAREN   311
FOR   312
ID(j)     316
ASSIGN   318
INT(0)   321
TO   323
ID(N)     326
MINUS   327
INT(1)   328
WHILE   338
ID(print)     341
LPAREN   346
IF   347
ID(col)     350
LBRACK   353
ID(i)     354
RBRACK   355
EQ   356
ID(j)     357
THEN   359
STRING( O)     364
ELSE   369
STRING( .)     374
RPAREN   378
SEMICOLON   379
ID(print)     387
LPAREN   392
STRING(\n)     393
RPAREN   397
RPAREN   398
SEMICOLON   399
ID(print)     410
LPAREN   415
STRING(\n)     416
RPAREN   420
RPAREN   421
FUNCTION   428
ID(try)     437
LPAREN   440
ID(c)     441
COLON   442
ID(int)     443
RPAREN   446
EQ   448
IF   513
ID(c)     516
EQ   517
ID(N)     518
THEN   525
ID(printboard)     530
LPAREN   540
RPAREN   541
ELSE   548
FOR   553
ID(r)     557
ASSIGN   559
INT(0)   562
TO   564
ID(N)     567
MINUS   568
INT(1)   569
WHILE   575
IF   578
ID(row)     581
LBRACK   584
ID(r)     585
RBRACK   586
EQ   587
INT(0)   588
AND   590
ID(diag1)     592
LBRACK   597
ID(r)     598
PLUS   599
ID(c)     600
RBRACK   601
EQ   602
INT(0)   603
AND   605
ID(diag2)     607
LBRACK   612
ID(r)     613
PLUS   614
INT(7)   615
MINUS   616
ID(c)     617
RBRACK   618
EQ   619
INT(0)   620
THEN   634
LPAREN   639
ID(row)     640
LBRACK   643
ID(r)     644
RBRACK   645
ASSIGN   646
INT(1)   648
SEMICOLON   649
ID(diag1)     651
LBRACK   656
ID(r)     657
PLUS   658
ID(c)     659
RBRACK   660
ASSIGN   661
INT(1)   663
SEMICOLON   664
ID(diag2)     666
LBRACK   671
ID(r)     672
PLUS   673
INT(7)   674
MINUS   675
ID(c)     676
RBRACK   677
ASSIGN   678
INT(1)   680
SEMICOLON   681
ID(col)     694
LBRACK   697
ID(c)     698
RBRACK   699
ASSIGN   700
ID(r)     702
SEMICOLON   703
ID(try)     723
LPAREN   726
ID(c)     727
PLUS   728
INT(1)   729
RPAREN   730
SEMICOLON   731
ID(row)     737
LBRACK   740
ID(r)     741
RBRACK   742
ASSIGN   743
INT(0)   745
SEMICOLON   746
ID(diag1)     748
LBRACK   753
ID(r)     754
PLUS   755
ID(c)     756
RBRACK   757
ASSIGN   758
INT(0)   760
SEMICOLON   761
ID(diag2)     763
LBRACK   768
ID(r)     769
PLUS   770
INT(7)   771
MINUS   772
ID(c)     773
RBRACK   774
ASSIGN   775
INT(0)   777
RPAREN   778
IN   782
ID(try)     785
LPAREN   788
INT(0)   789
RPAREN   790
END   792
EOF   797
val it = () : unit
- LET   2
TYPE   9
ID(any)     14
EQ   18
LBRACE   20
ID(any)     21
COLON   25
ID(int)     27
RBRACE   30
VAR   33
ID(buffer)     37
ASSIGN   44
ID(getchar)     47
LPAREN   54
RPAREN   55
FUNCTION   58
ID(readint)     67
LPAREN   74
ID(any)     75
COLON   78
ID(any)     80
RPAREN   83
COLON   85
ID(int)     87
EQ   91
LET   94
VAR   98
ID(i)     102
ASSIGN   104
INT(0)   107
FUNCTION   114
ID(isdigit)     123
LPAREN   130
ID(s)     131
COLON   133
ID(string)     135
RPAREN   141
COLON   143
ID(int)     145
EQ   149
ID(ord)     158
LPAREN   161
ID(buffer)     162
RPAREN   168
GE   169
ID(ord)     171
LPAREN   174
STRING(0)     175
RPAREN   178
AND   180
ID(ord)     182
LPAREN   185
ID(buffer)     186
RPAREN   192
LE   193
ID(ord)     195
LPAREN   198
STRING(9)     199
RPAREN   202
FUNCTION   209
ID(skipto)     218
LPAREN   224
RPAREN   225
EQ   227
WHILE   236
ID(buffer)     242
EQ   248
STRING( )     249
OR   253
ID(buffer)     255
EQ   261
STRING(\n)     262
WHILE   276
ID(buffer)     279
ASSIGN   286
ID(getchar)     289
LPAREN   296
RPAREN   297
IN   301
ID(skipto)     304
LPAREN   310
RPAREN   311
SEMICOLON   312
ID(any)     319
DOT   322
ID(any)     323
ASSIGN   327
ID(isdigit)     330
LPAREN   337
ID(buffer)     338
RPAREN   344
SEMICOLON   345
WHILE   352
ID(isdigit)     358
LPAREN   365
ID(buffer)     366
RPAREN   372
WHILE   381
LPAREN   384
ID(i)     385
ASSIGN   387
ID(i)     390
TIMES   391
INT(10)   392
PLUS   394
ID(ord)     395
LPAREN   398
ID(buffer)     399
RPAREN   405
MINUS   406
ID(ord)     407
LPAREN   410
STRING(0)     411
RPAREN   414
SEMICOLON   415
ID(buffer)     417
ASSIGN   424
ID(getchar)     427
LPAREN   434
RPAREN   435
RPAREN   436
SEMICOLON   437
ID(i)     444
END   447
TYPE   453
ID(list)     458
EQ   463
LBRACE   465
ID(first)     466
COLON   471
ID(int)     473
COMMA   476
ID(rest)     478
COLON   482
ID(list)     484
RBRACE   488
FUNCTION   492
ID(readlist)     501
LPAREN   509
RPAREN   510
COLON   512
ID(list)     514
EQ   519
LET   525
VAR   529
ID(any)     533
ASSIGN   537
ID(any)     540
LBRACE   543
ID(any)     544
EQ   547
INT(0)   548
RBRACE   549
VAR   559
ID(i)     563
ASSIGN   565
ID(readint)     568
LPAREN   575
ID(any)     576
RPAREN   579
IN   586
IF   589
ID(any)     592
DOT   595
ID(any)     596
THEN   609
ID(list)     614
LBRACE   618
ID(first)     619
EQ   624
ID(i)     625
COMMA   626
ID(rest)     627
EQ   631
ID(readlist)     632
LPAREN   640
RPAREN   641
RBRACE   642
ELSE   653
NIL   658
END   666
FUNCTION   672
ID(merge)     681
LPAREN   686
ID(a)     687
COLON   688
ID(list)     690
COMMA   694
ID(b)     696
COLON   697
ID(list)     699
RPAREN   703
COLON   705
ID(list)     707
EQ   712
IF   717
ID(a)     720
EQ   721
NIL   722
THEN   726
ID(b)     731
ELSE   736
IF   741
ID(b)     744
EQ   745
NIL   746
THEN   750
ID(a)     755
ELSE   760
IF   765
ID(a)     768
DOT   769
ID(first)     770
LT   776
ID(b)     778
DOT   779
ID(first)     780
THEN   793
ID(list)     798
LBRACE   802
ID(first)     803
EQ   808
ID(a)     809
DOT   810
ID(first)     811
COMMA   816
ID(rest)     817
EQ   821
ID(merge)     822
LPAREN   827
ID(a)     828
DOT   829
ID(rest)     830
COMMA   834
ID(b)     835
RPAREN   836
RBRACE   837
ELSE   845
ID(list)     850
LBRACE   854
ID(first)     855
EQ   860
ID(b)     861
DOT   862
ID(first)     863
COMMA   868
ID(rest)     869
EQ   873
ID(merge)     874
LPAREN   879
ID(a)     880
COMMA   881
ID(b)     882
DOT   883
ID(rest)     884
RPAREN   888
RBRACE   889
FUNCTION   893
ID(printint)     902
LPAREN   910
ID(i)     911
COLON   912
ID(int)     914
RPAREN   917
EQ   919
LET   923
FUNCTION   927
ID(f)     936
LPAREN   937
ID(i)     938
COLON   939
ID(int)     940
RPAREN   943
EQ   945
IF   947
ID(i)     950
GT   951
INT(0)   952
THEN   961
LPAREN   966
ID(f)     967
LPAREN   968
ID(i)     969
DIVIDE   970
INT(10)   971
RPAREN   973
SEMICOLON   974
ID(print)     976
LPAREN   981
ID(chr)     982
LPAREN   985
ID(i)     986
MINUS   987
ID(i)     988
DIVIDE   989
INT(10)   990
TIMES   992
INT(10)   993
PLUS   995
ID(ord)     996
LPAREN   999
STRING(0)     1000
RPAREN   1003
RPAREN   1004
RPAREN   1005
RPAREN   1006
IN   1011
IF   1014
ID(i)     1017
LT   1018
INT(0)   1019
THEN   1021
LPAREN   1026
ID(print)     1027
LPAREN   1032
STRING(-)     1033
RPAREN   1036
SEMICOLON   1037
ID(f)     1039
LPAREN   1040
MINUS   1041
ID(i)     1042
RPAREN   1043
RPAREN   1044
ELSE   1052
IF   1057
ID(i)     1060
GT   1061
INT(0)   1062
THEN   1064
ID(f)     1069
LPAREN   1070
ID(i)     1071
RPAREN   1072
ELSE   1080
ID(print)     1085
LPAREN   1090
STRING(0)     1091
RPAREN   1094
END   1098
FUNCTION   1104
ID(printlist)     1113
LPAREN   1122
ID(l)     1123
COLON   1124
ID(list)     1126
RPAREN   1130
EQ   1132
IF   1137
ID(l)     1140
EQ   1141
NIL   1142
THEN   1146
ID(print)     1151
LPAREN   1156
STRING(\n)     1157
RPAREN   1161
ELSE   1166
LPAREN   1171
ID(printint)     1172
LPAREN   1180
ID(l)     1181
DOT   1182
ID(first)     1183
RPAREN   1188
SEMICOLON   1189
ID(print)     1191
LPAREN   1196
STRING( )     1197
RPAREN   1200
SEMICOLON   1201
ID(printlist)     1203
LPAREN   1212
ID(l)     1213
DOT   1214
ID(rest)     1215
RPAREN   1219
RPAREN   1220
VAR   1226
ID(list1)     1230
ASSIGN   1236
ID(readlist)     1239
LPAREN   1247
RPAREN   1248
VAR   1253
ID(list2)     1257
ASSIGN   1263
LPAREN   1266
ID(buffer)     1267
ASSIGN   1273
ID(getchar)     1275
LPAREN   1282
RPAREN   1283
SEMICOLON   1284
ID(readlist)     1286
LPAREN   1294
RPAREN   1295
RPAREN   1296
IN   1330
ID(printlist)     1333
LPAREN   1342
ID(merge)     1343
LPAREN   1348
ID(list1)     1349
COMMA   1354
ID(list2)     1355
RPAREN   1360
RPAREN   1361
END   1363
EOF   1367
val it = () : unit
- 
Interrupt
- 
Interrupt
- 
Interrupt
- 
Interrupt
- 
Interrupt
- 
Interrupt
- 
Interrupt
- 
Interrupt
- 
